{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name modern-cljs.login.validators, :imports nil, :requires {valip.core valip.core, pred valip.predicates, valip.predicates valip.predicates}, :uses {present? valip.predicates, validate valip.core, matches valip.predicates, email-address? valip.predicates}, :defs {*re-password* {:name modern-cljs.login.validators/*re-password*, :file "C:\\Users\\jcoppis\\.boot\\cache\\tmp\\Users\\jcoppis\\Proyectos\\clojure\\modern-cljs\\axs\\-of1h48\\modern_cljs\\login\\validators.cljc", :line 7, :column 1, :end-line 7, :end-column 29, :dynamic true, :meta {:file "C:\\Users\\jcoppis\\.boot\\cache\\tmp\\Users\\jcoppis\\Proyectos\\clojure\\modern-cljs\\axs\\-of1h48\\modern_cljs\\login\\validators.cljc", :line 7, :column 16, :end-line 7, :end-column 29, :dynamic true}, :tag any}, user-credential-errors {:protocol-inline nil, :meta {:file "C:\\Users\\jcoppis\\.boot\\cache\\tmp\\Users\\jcoppis\\Proyectos\\clojure\\modern-cljs\\axs\\-of1h48\\modern_cljs\\login\\validators.cljc", :line 9, :column 7, :end-line 9, :end-column 29, :arglists (quote ([email password]))}, :name modern-cljs.login.validators/user-credential-errors, :variadic false, :file "C:\\Users\\jcoppis\\.boot\\cache\\tmp\\Users\\jcoppis\\Proyectos\\clojure\\modern-cljs\\axs\\-of1h48\\modern_cljs\\login\\validators.cljc", :end-column 29, :method-params ([email password]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([email password]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:email :password}, :order [:email :password]}, :doc nil}